# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build, Test & Deploy to GitHub packages and Maven Central

on:
  push:
    tags: [ '*' ]
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
        
    - name: Checkout completely
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout with tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2
        restore-keys: ${{ runner.os }}-m2
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        gpg-private-key: ${{ secrets.GPG_PRIVATEKEY }} # Value of the GPG private key to import        
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        
    - name: Build with Maven
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: mvn -P ci-cd -B clean install site --file pom.xml
      
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        files: target/site/jacoco/jacoco.xml 
        flags: unittests 
        fail_ci_if_error: true 
        verbose: true 
      
    - name: Deploy with Maven to GitHub Packages
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GITHUB_ACTOR: ${{ github.actor }} # GITHUB_TOKEN is the default env for the password 
        GITHUB_TOKEN: ${{ github.token }} # GITHUB_TOKEN is the default env for the password 
      run: |
        mvn -B \
          -P ci-cd \
          -DskipTests \
          -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/$GITHUB_REPOSITORY \
          --file pom.xml \
          deploy
          
    - name: Set up maven for OSSRH deployment
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_PASSWORD # env variable for token in deploy
        
    - name: Deploy with Maven to Maven Central
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      run: |
        mvn -B \
          -P ci-cd \
          -DskipTests \
          "-Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}" \
          -DaltDeploymentRepository=ossrh::default::https://oss.sonatype.org/service/local/staging/deploy/maven2/ \
          --file pom.xml \
          deploy
          
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "target/xlsx-writer*.jar*"
        token: ${{ github.token }} 
        
    - uses: actions/delete-package-versions@v3
      with: 
        package-name: 'uk.co.spudsoft.xlsx'
        min-versions-to-keep: 10
        delete-only-pre-release-versions: "true" 
        
    - name: Checkout GitHub Pages
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: gh-pages

    - name: Modify GitHub Pages
      run: |
        env
        mkdir -p gh-pages/docs/$GITHUB_REF_NAME
        cp -R target/site/* gh-pages/docs/$GITHUB_REF_NAME
        for dir in `find gh-pages/docs -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sort -r | tail -n +4`; do rm -Rf "gh-pages/docs/$dir"; done
        mkdir -p gh-pages/docs/latest
        cp -R target/site/* gh-pages/docs/latest
        echo "## Streaming XLSX Writer Releases" > gh-pages/docs/index.md
        echo >> gh-pages/docs/index.md
        echo "| Release | Site Root | JavaDocs |" >> gh-pages/docs/index.md
        for file in `find gh-pages/docs -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sort -r`; do echo "| ${file##*/} | [${file##*/}/project-info.html](https://${GITHUB_ACTOR}.github.io/${GITHUB_REPOSITORY##*/}/${file##*/}/project-info.html) | [${file##*/}/apidocs/index.html](https://${GITHUB_ACTOR}.github.io/${GITHUB_REPOSITORY##*/}/${file##*/}/apidocs/index.html) | " >> gh-pages/docs/index.md; done

    - name: Checkin GitHub Pages
      uses: crazy-max/ghaction-github-pages@v3
      with:
        target_branch: gh-pages
        build_dir: gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Clean up settings.xml
      run: |
        rm "${HOME}/.m2/settings.xml"        
